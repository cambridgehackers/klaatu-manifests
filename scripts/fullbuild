#!/bin/bash
# Usage:
#    mkdir test
#    cd test
#    run script
set -e
set -x
ANDROID_GENERIC_HOST=${ANDROID_GENERIC_HOST:-https://android.googlesource.com/platform/manifest}

if test -z "$1"; then
    echo "$0 <android version>"
    exit 1
fi
ANDROID_VERSION=$1
ANDROID_MANIFEST_FILE=default.xml

export SCRIPT_DIR="$( cd "$( dirname "$0" )" && pwd )"
repo init -u $ANDROID_GENERIC_HOST -b $ANDROID_VERSION -m $ANDROID_MANIFEST_FILE
(cd .repo; $SCRIPT_DIR/strip-projects.sh manifest.xml)
ln -s $SCRIPT_DIR/../manifests/gitorious-stripped-$ANDROID_VERSION.xml .repo/local_manifest.xml
mkdir libnativehelper
ln -s ../dalvik/libnativehelper/include libnativehelper/
repo sync -n -j 4 && repo sync -l -j 20
sed -i.001 -f $SCRIPT_DIR/sed/build_core_config.sed build/core/config.mk
$SCRIPT_DIR/$ANDROID_VERSION/zip_files.sh
(cd $SCRIPT_DIR/$ANDROID_VERSION/template; tar cf - .) | tar xf -
if [ -e $SCRIPT_DIR/$ANDROID_VERSION/patch ] ; then
ls $SCRIPT_DIR/$ANDROID_VERSION/patch/* | while read filename; do
    echo patching $filename
    patch -p0 <$filename
done
fi
sed -i.001 -e "/simphonebook\" },/s/}/},\n    { AID_RADIO, \"sigyn\" }/" frameworks/base/cmds/servicemanager/service_manager.c
(cd frameworks/base; patch -p1 <$SCRIPT_DIR/$ANDROID_VERSION/patch.frameworks_base)
cp $SCRIPT_DIR/cambridge-logo-mask.png frameworks/base/core/res/assets/images/cambridge-logo-mask.png

#source build/envsetup.sh; lunch full_maguro-userdebug
#TARGET_NO_RECOVERY=true make -j33
